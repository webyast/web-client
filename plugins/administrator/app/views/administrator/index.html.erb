<div class='plugin-icon'><img src='/icons/yast-system-user.png'/><%=_("Administrator Settings")%></div>

<div class="plugin-content grid_12">
<% content_for :head do %>
  <%= javascript_include_tag :defaults %>
  <%= javascript_include_tag "digitalspaghetti.password.js" %>

  <script type="text/javascript">
    // define custom validation function
    // alias is actually a list of email aliases
    jQuery.validator.addMethod("emails", function(value, element) {
      if (this.optional(element)) return true;

      var emails = value.split(",");

      for(i=0; i < emails.length; i++){
        var email = $.trim(emails[i]);
        // this is the email regexp from jQuery validator
	if (!/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i.test(email))
          return false;
      }

      return true;
    }, "<%= _("Enter a valid e-mail address.") -%>");

    // disable global onsubmit validation, the relevant fields are validated explicitly in onclick handlers
    $(document).ready(function() {
      $("#adminForm").validate({onsubmit: false})

      // make the error message translatable - override the default messsage
      $.extend($.validator.messages, {
	equalTo: "<%= _("The passwords do not match.") -%>",
	required: "<%= _("A password is required.") -%>"
      });

      $("#administrator_password").pstrength({
	  'displayMinChar'	: true,
	  'minCharText'		: 'Password Strength: ',
	  'verdicts'		: [
	    "<%= _("Weak") %>",
	    "<%= _("Normal") %>",
	    "<%= _("Medium") %>",
	    "<%= _("Strong") %>",
	    "<%= _("Very Strong") %>"
	  ],
      });
    });

    // start password validation workaround only when "Save" button has been pressed
    password_validation_enabled = false;

 </script>

<% end %>

<% disabled = ! @permissions[:write] %>

  <% form_for(:administrator, @administrator, :url => { :action => "update" }, :html => { :method => :put, :id => "adminForm", :onsubmit => "$('#progress').show()", :autocomplete => :off } ) do |f| %>
  <%= f.error_messages %>
    <fieldset class="wrapper with-background" id="password">
        <legend><%= _("Password Setup for User 'root'") -%></legend>
	<p><label><%=_("New Password")%></label>
	<!-- onkeyup handler is a workaround for a jQuery bug - it watches only one field for changes in equalTo check -->
	<%= f.password_field :password, :disabled => disabled, :onkeyup => "if (password_validation_enabled) $('#adminForm').validate().element('#administrator_confirm_password');" %>
	</p>
	<p>
	<label><%=_("Confirm Password")%></label>
	<%= f.password_field :confirm_password, :disabled => disabled, :equalTo => "#administrator_password", :class => "required", :onkeyup => "$('#adminForm').validate().element('#administrator_confirm_password');" %>
        </p>
    <!-- this is a pre-generated placeholder for the validation messages -->
    <p><label for="administrator_confirm_password" generated="true" class="error"></label></p>
    </fieldset>
    <fieldset class="wrapper with-background">
        <legend><%= _("Mail Setup for User 'root'") -%></legend>
	<p>
	<label><%=_("Forward system mail to")%></label>
	<%= f.text_field :aliases, :disabled => disabled, :class => "emails" %>
	<% unless params.has_key? "firstboot" # during initial configuration, allow only main Save button %>
	<%= f.submit _("Save Mail Only"), :name => "save_aliases", :disabled => disabled, :onclick=>"return $('#adminForm').validate().element('#administrator_aliases');", :class=>'cancel' %>
	<% end %>
	</p>
    <!-- this is a pre-generated placeholder for the validation messages -->
    <p><label for="administrator_aliases" generated="true" class="error"></label></p>
    </fieldset>
    <p><%= form_send_buttons :onclick=>"password_validation_enabled = true; alias_valid = $('#adminForm').validate().element('#administrator_aliases'); return $('#adminForm').validate().element('#administrator_confirm_password') && alias_valid;", :disabled => disabled %>
    </p>
  <% end %>
</div>
