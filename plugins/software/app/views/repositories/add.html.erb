<!--
# Copyright (c) 2009-2010 Novell, Inc.
# 
# All Rights Reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License
# as published by the Free Software Foundation.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, contact Novell, Inc.
# 
# To contact Novell about this file by physical or electronic mail,
# you may find current contact information at www.novell.com
-->
<% content_for :head do %>
<!--   <%= javascript_include_tag :defaults %> -->

  <style type="text/css">
	 /* TODO temporary solution please see the comment in style.css*/
	 input.error {
		float: none;
	 }

    label.error { 
		float: none; 
		color:#990000;
      font-weight:bold;
		padding-left: .5em; 
		vertical-align:baseline; 
		width: 100%; 
		text-align: left 
	 }

	 label.valid { 
		background: url('../images/checked.gif') no-repeat;
		padding:0px 10px 0px 18px;
		vertical-align:middle; 
		margin-left:5px;
	 }
  </style>

  <script type="text/javascript">
     $(document).ready(function(){
	// define a custom validation function for repository URL
	jQuery.validator.addMethod("repo_url", function(value, element) {
	  return this.optional(element)
	  // modified regexp from jQuery validation: accept any protocol, not only http(s) and ftp
	  || /^([a-zA-Z]+):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(value);

	}, "<%= _("Enter a valid repository URL.") -%>");

	// define a custom validation function for repository alias
	jQuery.validator.addMethod("repo_alias", function(value, element) {
	  return this.optional(element)
	  // PackageKit does not accept some special characters in alias
	  || /^[^`'"\\\[\]^$\{\}<>]*$/i.test(value);

	}, "<%= _("Symbols <b>%s</b> are not allowed in repository alias.") % "^${}[]&gt;&lt;`\\'\\\"\\\\" -%>");

   // validate the form
	$("#repositoryForm").validate({
	  onkeyup: function(element) { this.element(element); },
	  success: "valid",
	  submitHandler: function(form) {
	    var message = "<%= _("Please wait") -%>";
	    disableFormOnSubmit(message);
	    form.submit();
	  }
	});

	// set custom translatable messages
	$.extend($.validator.messages, {
	  required: "<%= _("This value cannot be empty.") -%>"
	});
     });

    // toggle the enable/disable link text after clicking it
    // and update the hidden field
    function toggle_flag(link, field, enabled_text, disabled_text) {
      // change the hidden field, link text and hide/show the status
      if ($(field).val() == "true")
      {
	$(field).val("false");
	$(link).text("<%= _("enable") -%>");
	$(enabled_text).hide();
	$(disabled_text).show();
      }
      else
      {
	$(field).val("true");
	$(link).text("<%= _("disable") -%>");
	$(enabled_text).show();
	$(disabled_text).hide();
      };
    };

    // update the icon if enabled status is changed
    function update_icon() {
      if ($('#repo_enabled').val() == 'true')
      {
	$('#status_icon').removeClass('unused').addClass('ok');
      }
      else
      {
	$('#status_icon').removeClass('ok').addClass('unused');
      }
    };

    // check whether the repository already exists
    function check_duplicate()
    {
      var repos = <%= @repo_urls.map{|u| escape_javascript u}.to_json -%>;
      var url = $('#repository_url').val();

      for (var i = 0; i < repos.length; i++)
      {
	 if (url == repos[i])
	 {
	   return confirm('<%= _("A repository with this URL already exists.\\nCreate a duplicate?") -%>');
	 };
      };

      return true;
    };

    // submit handler for the form
    function submit_handler()
    {
      if ($('#repositoryForm').valid())
      {
	if (check_duplicate() == false) return false;
	$('#progress').show();
	return true;
      }
      else
      {
	return false;
      }
    };

  </script>
<% end %>


<% disabled = ! @permissions[:write] %>
<div class='plugin-icon'><img src='/icons/yast-online_update.png'/>
  <%= _("Software Repositories") %>
  <%= header_spacer %>
  <%= _("Add a new repository") %>
</div>

<div class='plugin-content'>

<% form_for(:repository, @repo, :url => { :action => 'create', :id => @repo.id }, :html => { :method => :post, :id => 'repositoryForm',
    :onsubmit => "return submit_handler();" } ) do |f| %>
  <fieldset>
    <div id="status_icon" class="status-icon <%= @repo.enabled ? 'ok' : 'unused' %>"></div>
    <span style="padding-bottom: 8px; vertical-align: 50%; font-weight: bold"><%= _("New Repository") %></span>

    <p><div style="min-width: 6em; float: left;">Alias: </div>
    <%= f.text_field :id, :disabled => disabled, :class => 'repo_alias required' -%></p>

    <p><div style="min-width: 6em; float: left;">Name: </div>
    <%= f.text_field :name, :disabled => disabled, :class => 'required' -%></p>

    <p><div style="min-width: 6em; float: left;">URL: </div>
    <%= f.text_field :url, :disabled => disabled, :class => 'repo_url required' -%></p>

    <p onclick="update_icon();"><%= hidden_field_with_toggle_link f, :enabled, @repo.enabled,
	_("Repository will be %s.") % "<i>#{bool_status(true)}</i>",
	_("Repository will be %s.") % "<i>#{bool_status(false)}</i>" -%>
    </p>

    <p><%= hidden_field_with_toggle_link f, :autorefresh, @repo.autorefresh,
	_("Autorefresh will be %s.")% "<i>#{bool_status(true)}</i>",
	_("Autorefresh will be %s.")% "<i>#{bool_status(false)}</i>" -%>
    </p>

    <p><%= hidden_field_with_toggle_link f, :keep_packages, @repo.keep_packages,
	_("Keep packages option will be %s.")% "<i>#{bool_status(true)}</i>",
	_("Keep packages option will be %s.")% "<i>#{bool_status(false)}</i>" -%>
    </p>
  </fieldset>

  <div class="nav-buttons">
    <%= form_back_button :action => :index, :onclick=>"$('#progress').show()"%>
    <% if !disabled -%>
      <%= form_str_spacer %>
      <%= submit_tag _("Save") %>
    <% end -%>
  </div>
<% end %>
</div>
