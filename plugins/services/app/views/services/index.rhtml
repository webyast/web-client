<!--
# Copyright (c) 2009-2010 Novell, Inc.
# 
# All Rights Reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License
# as published by the Free Software Foundation.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, contact Novell, Inc.
# 
# To contact Novell about this file by physical or electronic mail,
# you may find current contact information at www.novell.com
-->
<%= javascript_include_tag :defaults %>
<%= javascript_include_tag "jquery.quicksearch.js" %>
<% javascript_tag do %>
$(document).ready(function() {

    $("#services div.list-fieldset").each (function(index) {
	if ($(this).is(":has(span.status_running)")) {
	    $(this).find(".list-fieldset-header .service-icon").attr('class','service-icon status-icon ok');
	    if ($(this).is(":has(div.service_disabled)")) {
		$(this).find(".list-fieldset-header .service-icon").attr('class','service-icon status-icon ok-unused');
	    }
	}
	else if ($(this).is(":has(span.status_dead)")) {
	    $(this).find(".list-fieldset-header .service-icon").attr('class','service-icon status-icon error');
	}
	else {
	    $(this).find(".list-fieldset-header .service-icon").attr('class','service-icon status-icon unused');
	    if ($(this).is(":has(div.service_enabled)")) {
		$(this).find(".list-fieldset-header .service-icon").attr('class','service-icon status-icon unused-ok');
	    }
	}
    });

    $('input#service_search').quicksearch('#services div.list-fieldset', {
      selector: '.quicksearch_content',
      delay: 100
    });

    $('.accordion div.list-fieldset:even').addClass('alt-bg');
})


// adapt the status icon of given service
function toggle_service_info (id) {
    var heading	= $(id).closest('.service-content').siblings('div.list-fieldset-header');
    var buttons	= $(id).siblings('p.service-buttons');

    // hide enable/disable buttons if they should not be seen
    $(buttons).find('a#enable').hide();
    $(buttons).find('a#disable').hide();

    if ($(id).is(':has(span.status_running)')) {
	$(heading).find(".service-icon").attr('class','service-icon status-icon ok');
	$(buttons).find('a#start').hide();
	$(buttons).find('a#stop').show();
	// running, but disabled: not ok
	if ($(id).is(':has(div.service_disabled)')) {
	    $(heading).find(".service-icon").attr('class','service-icon status-icon ok-unused');
	}
    }
    else if ($(id).is(':has(span.status_dead)')) {
	$(heading).find(".service-icon").attr('class','service-icon status-icon error');
	$(buttons).find('a#stop').hide();
	$(buttons).find('a#start').show();
    }
    else {
	$(heading).find(".service-icon").attr('class','service-icon status-icon unused');
	$(buttons).find('a#stop').hide();
	$(buttons).find('a#start').show();
	// not running, but enabled: not unused
	if ($(id).is(':has(div.service_enabled)')) {
	    $(heading).find(".service-icon").attr('class','service-icon status-icon unused-ok');
	}
    }
    if ($(id).is(':has(div.service_disabled)')) {
	$(buttons).find('a#enable').show();
    } else if ($(id).is(':has(div.service_enabled)')) {
	$(buttons).find('a#disable').show();
    }
}

function select_status (val) {
    if (val == "all") {
	$("#services > div.list-fieldset").show();
    }
    else if (val == "not-running") {
	$('#services > div.list-fieldset').each(function(index) {
	    if ($(this).is(":has(span.status_not_running)")) {
		$(this).show();
	    } else {
		$(this).hide();
	    }
	});
    }
    else if (val == "running") {
	$('#services > div.list-fieldset').each(function(index) {
	    if ($(this).is(":has(span.status_running)")) {
		$(this).show();
	    } else {
		$(this).hide();
	    }
	});
    }
    else if (val == "dead") {
	$('#services > div.list-fieldset').each(function(index) {
	    if ($(this).is(":has(span.status_dead)")) {
		$(this).show();
	    } else {
		$(this).hide();
	    }
	});
    }
    else if (val == "enabled") {
	$('#services > div.list-fieldset').each(function(index) {
	    if ($(this).is(":has(div.service_enabled)")) {
		$(this).show();
	    } else {
		$(this).hide();
	    }
	});
    }
    else if (val == "disabled") {
	$('#services > div.list-fieldset').each(function(index) {
	    if ($(this).is(":has(div.service_disabled)")) {
		$(this).show();
	    } else {
		$(this).hide();
	    }
	});
    }
}
<% end %>
<% content_for :before_script do %>
  <% javascript_tag do %>
  $(document).ready(function(){
    $(".accordion").accordion({
       autoHeight : false,
       navigation : true,
       collapsible: true,
       header     : 'div.list-fieldset div.list-fieldset-header',
       change: function(event, ui) {
	    $('#service_result_' + $(ui.oldHeader).attr("name")).hide();
	},
       animated   : false
    });
    $(".accordion").accordion('activate',false);
  });
  <% end %>
<% end %>


<div class='plugin-icon'><img src='/icons/yast-system.png' alt=''/><%= _("System Services") %></div>

<div class="plugin-content grid_12">


<% unless @permissions[:execute] %>
<p class="missing-permissions"><%=_("You do not have permission to execute the services.")%></p>
<% end %>

<p>
    <label for="filter"><%=_("Filter services")%></label>
    <%= select_tag "filter", options_for_select([
	[ _("All"), "all"],
	[ _("Running"), "running"],
	[ _("Not Running"), "not-running"],
	[ _("Dead"), "dead"],
	[ _("Started on Boot"), "enabled"],
	[ _("Not Started on Boot"), "disabled"],
    ])
    %>
    <%= observe_field("filter", :function => "select_status(value)") %>
</p>

<form action="#" id="quicksearch">
  <label><%= _("Quick Search") %></label>
  <input type="text" id="service_search">
</form>

<div id="services" class="accordion">
<%
commands	= [ "start", "stop", "restart", "enable", "disable"]
@services.each do |service| %>
  <div class="list-fieldset">

  <div class="list-fieldset-header" name=<%=service.name%>><span class="service-icon"></span><%=h service.name %><em style="position:absolute; left:25%"><%= h service.summary%></em></div>

  <div class='service-content' style="display:none">

  <p class='description quicksearch_content'>
    <i><%= service.description ? h(service.description) : _("Description for service is not available") %></i>
    <!-- This is a workaround for quicksearch plugin - it can search in _one_ element
      so we add the service name and summary here again and make it hidden so it is also
      searched but not displayed -->
    <div style="display: none"><%= h(service.name)+h(service.summary) -%></div>
  </p>

  <img src="/images/working.gif" height="12" width="12" border="0"
    id="service_progress_<%=h service.name%>" style="display: none" alt='working...'/>

  <span class='service_status' id='service_status_<%= h service.name%>'>
    <% unless service.status.nil? %>
    <%= render :partial => 'status', :locals => { :status => service.status, :enabled => service.enabled?, :custom => service.custom? } %>
    <% end %>
  </span>

  <%=
	url	= {
	    :controller => :services,
	    :id		=> service.name,
	    :action	=> :show_status,
	    :custom	=> service.custom
	}
	link_to_remote _('(refresh)'), :update => "service_status_#{service.name}",
	    :url => url,
	    :loading  => "$('#service_progress_#{service.name}').show(); $('#service_status_#{service.name}').hide(); $('#service_result_#{service.name}').hide();",
	    :complete => "$('#service_progress_#{service.name}').hide(); toggle_service_info ('#service_status_#{service.name}'); $('#service_status_#{service.name}').show()"
  %>

  <p class="service-buttons">
  <% commands.each do |cmd|
        # do not show enable/disable part for custom services -->
	if @permissions[:execute] && ! (service.custom? && (cmd == "enable" || cmd == "disable")) %>
	    <%=
		url	= {
		    :id		=> cmd, 
		    :action	=> "execute", 
		    :service_id	=> service.name,
		    :custom	=> service.custom
		}
		status_url	= {
		    :controler	=> :services,
		    :action	=> :show_status,
		    :id		=> service.name,
		    :custom	=> service.custom
		}
		html_options	= {
		    :class	=> "button",
		    :id		=> cmd
		}
		html_options[:style]	= "display: none" if (cmd == "start" && service.status == 0) || (cmd == "stop" && service.status != 0) ||
							     (cmd == "enable" && service.enabled?) || (cmd == "disable" && !service.enabled?) 

		label = case cmd
		  when "start" then _("Start")
		  when "stop" then _("Stop")
		  when "restart" then _("Restart")
		  when "enable"	then _("Start on Boot")
		  when "disable" then _("Do Not Start on Boot")
		  else cmd
		end

		complete   	= remote_function(:update => "service_status_#{service.name}",
                       :url => status_url,
                       :complete => "$('#service_progress_#{service.name}').hide(); $('#service_status_#{service.name}').show(); toggle_service_info ('#service_status_#{service.name}'); $('#service_result_#{service.name}').show();"
                )

		# dependent services must also update status
		if (cmd == "start" || cmd == "restart" || cmd == "enable")
		  service.required_for_start.each do |required|
		    complete	= complete + ";" + remote_function(
			:update		=> "service_status_#{required}",
			:url		=> {
			    :controler	=> :services,
			    :action	=> :show_status,
			    :id		=> required
			},
			:complete	=> "toggle_service_info ('#service_status_#{required}')"
		    )
		  end
		elsif (cmd == "stop" || cmd == "disable")
		  service.required_for_stop.each do |required|
		    complete	= complete + ";" + remote_function(
			:update		=> "service_status_#{required}",
			:url		=> {
			    :controler	=> :services,
			    :action	=> :show_status,
			    :id		=> required
			},
			:complete	=> "toggle_service_info ('#service_status_#{required}')"
		    )
		  end
		end

		link_to_remote label,
		    :url	=> url,
		    :loading	=> "$('#service_progress_#{service.name}').show(); $('#service_status_#{service.name}').hide(); $('#service_result_#{service.name}').hide();",
		    :complete   => complete,
		    :html	=> html_options,
		    :update	=> "service_result_#{service.name}"
	    %>
	<%
	end
     end %>

      </p>
      <span class='service_result' id='service_result_<%=service.name%>'>
	<%= render :partial => 'result' %>
      </span>

  </div>
  </div>
<% end %>
</div>
<fieldset>
<%= form_back_button %>
</fieldset>
</div>
