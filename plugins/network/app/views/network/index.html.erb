<!--
# Copyright (c) 2009-2010 Novell, Inc.
# 
# All Rights Reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License
# as published by the Free Software Foundation.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, contact Novell, Inc.
# 
# To contact Novell about this file by physical or electronic mail,
# you may find current contact information at www.novell.com
-->

<%
  write_disabled = ! @permissions[:write]
  static_disabled = write_disabled || @conf_mode != "static"
%>

<% content_for :head do %>
   <%= javascript_include_tag :defaults %>
   <%= javascript_include_tag "jquery.example.js" %>

   <% javascript_tag do %>
    $(document).ready(function(){
      $('#ip').example('Address of this machine (e.g. 192.168.0.18)');
      $('#netmask').example('Address shared with other machines (e.g. 255.255.255.0)');
      $('#name').example('Name of this machine in the network (e.g. mycomputer)');
      $('#domain').example('Network name (e.g. example.com)');
      $('#nameservers').example('IP address of machine which translates hostnames in IP addresses');
      $('#searchdomains').example('Domain name where hostname searching starts ');
      $('#default_route').example('Target address for outgoing IP data packages');
    });
   <% end %>

   <% javascript_tag do -%>
      // Slide and focus the field with error if accordion/tab section  is closed 
      // (prevent the slideDown of opened tab)
      function focus_field(field_id) {
        var fragment_id = $("#"+ field_id).parents('fieldset').attr("id");
        if ($("#"+fragment_id+" legend").attr('aria-expanded') != 'true') {
           $(".fieldset-group.ui-accordion").accordion('activate', "#"+fragment_id+" legend");
        };
        $(".fieldset-group.ui-tabs").tabs('select',"#"+fragment_id);
        $("#"+field_id).focus();
      };
   <% end %>

   <% javascript_tag do -%>
      function disable_static_config(abool) {
          $("#ip")[0].disabled = abool;
          $("#netmask")[0].disabled = abool;
          $("#name")[0].disabled = abool;
          $("#domain")[0].disabled = abool;
          $("#nameservers")[0].disabled = abool;
          $("#searchdomains")[0].disabled = abool;
          $("#default_route")[0].disabled = abool;
// TODO fix and use this
//          $.each(["#ip", "#netmask",
//                  "#nameservers", "#searchdomains",
//                  "#default_route"], function() {
//              $(this)[0].disabled = abool;
//          });
      }

   <% end -%>

<!-- 	TODO move all stylesheets to public css file -->
	<style type="text/css">
	 /* TODO move to style.css fix for validation */
	 .ui-accordion .ui-accordion-content {padding:1em 0px;}
	 label.error {
		float:none;
		display:inline;
		font-weight:bold;
		color:#990000;
		padding-left:.5em;
		vertical-align:middle;
	 }
	 label.valid { 
		background: url('../images/checked.gif') no-repeat;
		padding:0px 0px 0px 18px;
		vertical-align:middle; 
		margin-left:5px;
	 }
	</style>

	<script type="text/javascript">
		function switchFieldsetGroupTab()
		{
			var ipValid = getElementsByClass("error valid", "ip-address", "label");
			var ipErrors = getElementsByClass("error", "ip-address", "label");
			var dnsValid = getElementsByClass("error valid", "dns", "label");
			var dnsErrors = getElementsByClass("error", "dns", "label");

			if(dnsValid.length != dnsErrors.length && ipValid.length == ipErrors.length) {
				focus_field("name");
			} else if(ipValid.length != ipErrors.length && dnsValid.length == dnsErrors.length) {
				focus_field("ip");
			} else if(ipValid.length != ipErrors.length && dnsValid.length != dnsErrors.length) {
				focus_field("ip");
			} else if (ipValid.length == ipErrors.length && dnsValid.length == dnsErrors.length) {
				$('#progress').show();
				return true;
			}
		}
	</script>

	<%= javascript_include_tag "validation.js" %>
	<script type="text/javascript">
	$(document).ready(function() {
	  validateIPv4("ip");
	  validateSubnetMask("netmask"); //accept prefixlen and common subnet mask format e.g. 255.255.255.0
	  validateDefaultRoute("default_route");
	  validateDomainNameWithAndWithoutTLD("domain");
	  validateIPv4("nameservers");
	  validateDomainNameWithAndWithoutTLD("searchdomains");

		$("#dnsForm").validate({ 
		  onblur: true,
		  rules:{
			 ip: {
				ip: true,
				required:true
			 },
			 netmask:{
				netmask: true,
				required:true
			 },
			 default_route: {
				default_route: true,
				required:true
			 },
			 name: { 
				required: true,
			 },
			 domain: {
				domain: true,
				required:true
			 },
			 nameservers: {
				nameservers: true,
				required:true
			 },
			 searchdomains: {
				searchdomains: true,
				required:true
			 }
		  },

		  messages: {
			 ip: {
				required: "<%= _("This field is required") -%>",
				ip: "<%= _("Enter a valid IP address") -%>"
			 },
			 netmask: {
				required: "<%= _("This field is required") -%>",
				netmask: "<%= _("Enter a valid subnet mask or prefix") -%>"
			 },
			 default_route: {
				required: "<%= _("This field is required") -%>",
				default_route:"<%= _("Enter a valid IP address") -%>"
			 },

			 name:{ required: "<%= _("This field is required") -%>" },

			 domain:{
				required: "<%= _("This field is required") -%>",
				domain: "<%= _("Enter a valid domain name") -%>" 
			 },
			 nameservers: {
				required: "<%= _("This field is required") -%>",
				nameservers: "<%= _("Enter a valid IP address") -%>"
			 },
			 searchdomains: {
				required: "<%= _("This field is required")  -%>",
				searchdomains: "<%= _("Enter a valid domain name") -%>" 
			 }
		  },
		  success: "valid"  
		});
		
		// FIXME: find better solution for starting the validation with document on load
		$("#ip").keyup( function() {$("#dnsForm").valid();}); 
		$("#netmask").keyup( function() {$("#dnsForm").valid();});
		$("#default_route").keyup( function() {$("#dnsForm").valid();});
		$("#domain").keyup( function() {$("#dnsForm").valid();});
		$("#nameservers").keyup( function() {$("#dnsForm").valid();});
		$("#searchdomains").keyup( function() {$("#dnsForm").valid();});
	 });
	 </script>

   <% javascript_tag do -%>
   //TODO move this validations to separate js library
      function validIP(ip) {
        //use [0-9] to avoid negative values and it is also better prepared to IP6
        if (!ip.match(/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$/))
          return false;

        ipArray = ip.split(/\./);
        for (i=0;i<4;++i){
          if (ipArray[i]>255)
            return false;
        }
        return true;
      }

      function validPrefix(prefix) {
        if (!prefix.match(/^\/[0-9]{1,2}$/))
          return false;

        if (prefix.substr(1)>32)
          return false;

        return true;
      }
      function validNameservers(nameservers){
        if (nameservers.match(/^\s*$/))
            return false;
        return true; //FIXME better check
      }
      function validHostname(hostname){
        //not empty
        if (hostname.match(/^\s*$/))
            return false;
        return true; //FIXME better check
      }

      //RFC 952 [a-zA-Z0-9'-']
      //cann't have any spaces
      //cann't start with a hyphen '-'
      //cann't start with a digit
      //no periodic hyphen '-'
      //must not end with a hyphen '-'

      //vgorobets@suse.de TODO:
      //upgrade to RFC1123

      var valChar = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-0123456789";

      function hostValidation(t,v){
          var valhostname = "";
          for (i=0; i < t.value.length; i++) {
          x = t.value.charAt(i);
             if (v.indexOf(x,0) != -1 && t.value !='-' && isNaN(t.value)) {
                if(t.value[t.value.length-1] == t.value[t.value.length-2] && t.value[t.value.length-1] == "-") {
						t.value = t.value.substring(0,t.value.length-1);
                  addWarning("periodic");
                }
                valhostname += x;
              } else {
                addWarning(x); // put warning if character is invalid
              }
          }
          t.value = valhostname;
      }

      function clearWarning(){
			$("#dns").find("label[for='name']").filter('[class=error]').text("");
      }

      function addWarning(message){
         if(message == " ") {
            message += "<%= _("whitespace - invalid character.") %>"
         } else if (isNaN(message) == false) {
            message += "<%= _(" - can not start with a digit.") %>"
         } else if (message == "periodic") { 
            message = "<%= _("periodic '-' is not allowed.") %>"
         } else if (message == "endWithHyphen") { 
				message = "<%= _("can not end with (-) hyphen.") %>"
         } else {
            if(message == '-') {
               message = "<%= _("can not start with (-) hyphen.") %>"
            } else {
               message += "<%= _(" - is invalid character for hostname.") %>"
            }
         }
			
			$("#dns").find("label[for='name']").filter('[class=error valid]').removeClass("valid").addClass("error");
			$("#dns").find("label[for='name']").filter('[class=error]').text(message);
		}

      function endWithHyphen(t) {
         if(t.value[t.value.length-1] == "-") {
            t.value = t.value.substring(0,t.value.length-1);
            focus_field("name");
            addWarning("endWithHyphen");
			}        
      }

      function validDomain(domain){
        //not empty, suse doesn't support it
        if (domain.match(/^\s*$/))
            return false;
        return true; //FIXME better check
      }
    <% end %>
<% end %>
<% content_for :before_script do %>
  <% javascript_tag do %>
    $(document).ready(function(){
/*
      // commenting/uncommenting these few lines is all it takes to switch from tebs to accordion
      $(".fieldset-group").accordion({
        autoHeight : false,
        navigation : true,
        header     : 'fieldset legend',
        collapsible: true,
        animated   : false
      });
*/
      addTabsNavigation(".fieldset-group", "span");
      $(".fieldset-group").tabs();
    });

  <% end %>
<% end %>
<div class='plugin-icon'><img src='/icons/yast-network.png' alt=''/><%=_("Network")%></div>
<div class='plugin-content grid_12 mkudlvasr-new-forms'>

<%= render :partial => 'shared/missing_write_permissions' if write_disabled %>

<% form_tag("/network", :method => "get") do %>
  <!-- (collection, value, text, selected) -->


<!--  temporally disabled - 2009-10-26 rlihm
  <fieldset id="interface_set" class="">
    <legend><span><%= _("Interface")%></span></legend>
    <p>
      <%= select_tag(:interface, options_from_collection_for_select(@ifcs, :id, :id, @iface)) %>
    </p>
    <p>
      <%= submit_tag(_("Select"), :class => "button") %>
    </p>
  </fieldset>
   -->

<% end %>

<% form_for :network, @network, :url => { :action => "update" }, :html => {:id=>"dnsForm", :method => :put, :onsubmit => "return switchFieldsetGroupTab();"} do |n| %>
<%= n.error_messages %>
<!-- ~/svn/web-client/plugins/systemtime/app/views/systemtime/index.rhtml -->
  
  <input type="hidden" id="interface" name="interface" value="<%= @iface %>"/>
  <fieldset id="general-settings" class="wrapper with-background no-min-height">
    <legend><span>General settings</span></legend>
    <p>
      <label for="<%= :conf_mode %>"><%=_("Configuration mode")%></label>
      <%= select_tag(:conf_mode, options_for_select(@conf_modes, @conf_mode), :disabled => write_disabled)%>
    </p>
  </fieldset>
  <div class="fieldset-group">
    <fieldset id="ip-address" class="wrapper with-background">
      <legend id="ip-tab"><span>IP Address</span></legend>
      <div>
        <p>
          <label for="<%= :ip %>"><%=_("IP address")%></label>
          <%=text_field_tag :ip, @ip, :disabled => static_disabled %>
        </p>
        <p>
          <label for="<%= :netmask %>"><%=_("Subnet mask/Prefixlen")%></label>
          <%=text_field_tag :netmask, @netmask, :disabled => static_disabled %>
        </p>
        <p>
          <label for="<%= :default_route %>"><%=_("Default route")%></label>
          <%=text_field_tag :default_route, @default_route, :disabled => static_disabled %>
        </p>
      </div>
    </fieldset>
    <fieldset id="dns" class="wrapper with-background">
      <legend id="dns-tab"><span>DNS</span></legend>
      <div>
        <p>
          <label for="<%= :name %>"><%=_("Hostname")%></label>
          <%=text_field_tag(:name, @name, :onblur=>"endWithHyphen(this);clearWarning();", :onkeyup=>"hostValidation(this,valChar);", :onkeydown=>"clearWarning();", :disabled => static_disabled) %>
<!--           <span id="warning" style="font-weight:bold; margin-left:20px; color:#c00000">&nbsp;</span> -->
			 <label class="error" for="name" generated="true">&nbsp;</label>
        </p>
        <p>
          <label for="<%= :domain %>"><%=_("Domain")%></label>
          <%=text_field_tag :domain, @domain, :disabled => static_disabled %>
        </p>
        <p>
          <label for="<%= :nameservers %>"><%=_("Name servers")%></label>
          <%=text_field_tag :nameservers, @nameservers.join(" "), :class=>"nameservers", :disabled => static_disabled %>
        </p>
        <p>
          <label for="<%= :searchdomains %>"><%=_("Search domains")%></label>
          <%=text_field_tag :searchdomains, @searchdomains.join(" "), :disabled => static_disabled %>
        </p>
      </div>
    </fieldset>
  </div>
  <div class="nav-buttons">
    <%= form_send_buttons :disabled => write_disabled %>
  </div>
<% end %>
</div>

<% javascript_tag do -%>
   $('#conf_mode').delayedObserver(0.25, function(element, value) {
     disabled = <%= write_disabled %> || value != "static";
     disable_static_config(disabled);
   })
<% end -%>
